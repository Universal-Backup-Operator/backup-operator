apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backup-operator.fullname" . }}
  labels:
    {{- include "backup-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ int .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "backup-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "backup-operator.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "backup-operator.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
      {{- if kindIs "string" . }}
      {{- tpl . $  | nindent 6 }}
      {{- else }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- end }}
      containers:
      - name: manager
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- $image := required ".image.repository is not set" .Values.image.repository }}
        image: {{ default .Chart.AppVersion .Values.image.tag | toString | printf "%s:%s" $image | replace ":@" "@" | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        {{- $args := append .Values.extraArgs "--leader-elect" }}
        {{- toYaml $args | nindent 8 }}
        ports:
        {{- if .Values.metrics.enabled }}
        - name: metrics
          containerPort: 8080
          protocol: TCP
        {{- end }}
        - name: healthz
          containerPort: 8081
          protocol: TCP
        - name: webhook
          containerPort: 9443
          protocol: TCP
        {{- with .Values.env }}
        env:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.envFrom }}
        envFrom:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.startupProbe }}
        startupProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: webhook-certificate
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
        {{- with .Values.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.deployment.container.spec }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
      - name: tmp
        emptyDir: {}
      - name: webhook-certificate
        secret:
          secretName: {{ include "backup-operator.webhookCertificateName" . }}
      {{- with .Values.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.template.spec }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  {{- with .Values.deployment.spec }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
