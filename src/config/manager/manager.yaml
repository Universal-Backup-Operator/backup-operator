apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: backup-operator
    app.kubernetes.io/part-of: backup-operator
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: backup-operator
    app.kubernetes.io/part-of: backup-operator
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # This code is autogenerated. We do not use it, so we ignore all vulnerabilities 
    checkov.io/skip1: CKV2_K8S_6
    checkov.io/skip6: CKV_K8S_6
    checkov.io/skip8: CKV_K8S_8
    checkov.io/skip9: CKV_K8S_9
    checkov.io/skip10: CKV_K8S_10
    checkov.io/skip11: CKV_K8S_11
    checkov.io/skip12: CKV_K8S_12
    checkov.io/skip13: CKV_K8S_13
    checkov.io/skip14: CKV_K8S_14
    checkov.io/skip15: CKV_K8S_15
    checkov.io/skip20: CKV_K8S_20
    checkov.io/skip22: CKV_K8S_22
    checkov.io/skip23: CKV_K8S_23
    checkov.io/skip28: CKV_K8S_28
    checkov.io/skip29: CKV_K8S_29
    checkov.io/skip30: CKV_K8S_30
    checkov.io/skip31: CKV_K8S_31
    checkov.io/skip33: CKV_K8S_33
    checkov.io/skip37: CKV_K8S_37
    checkov.io/skip38: CKV_K8S_38
    checkov.io/skip40: CKV_K8S_40
    checkov.io/skip43: CKV_K8S_43
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: controller:latest
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
